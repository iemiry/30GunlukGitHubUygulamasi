//başlangıç olarak bu etkinlik java ile yapılabilecek uygulama fikirlerine bakıldı

import java.awt.Polygon;
import java.util.ArrayList;
import java.awt.Rectangle;

class JGoktasi extends Polygon{

	int uSolXpoz, uSolYpoz;
	
	int xYonu=1;
	int yYonu=1;

	int goktasiGenislik = 26;
	int goktasiYukseklik = 31;

	int genislik=JOyunalani.oyunAlaniGenislik;
    int yukseklik=JOyunalani.oyunAlaniYukseklik;

	public static ArrayList<JGoktasi> GokTaslari = new ArrayList<JGoktasi>();

     	int [] cokgenXArray, cokgenYArray;
	
	public static int[] hbCokgenXArray={10,17,26,34,27,36,26,14,8,1,5,1,10};
	public static int[] hbCokgenYArray={0,5,1,8,13,20,31,28,31,22,16,0};


	public JGoktasi(int[] cokgenXArray,int[] cokgenYArray,int cokgenNokta,int rastXBasPoz,int rastyBasPoz){

		super(cokgenXArray, cokgenYArray,cokgenNokta);
		this.xYonu=(int)(Math.random()*4+1);
		this.yYonu=(int)(Math.random()*4+1);

		this.uSolXPoz=rastXBasPoz;
		this.uSolYPoz=rastYBasPoz;


}	

//taşları çarptıracağız ve sekecek

	public Rectangle getSekme(){

		return new Rectangle(super.xpoints[0], super.ypoints[0], goktasiGenislik, goktasiYukseklik);
	}


	public void hareketEt(){

		Rectangle tasKontrol = this.getSekme();

		for(JGoktasi tas : GokTaslari){

			Rectangle digerTas = tas.getSekme();

			if(tas != this && digerTas.intersect(tasKontrol)){

				int rastXYonu = this.xYonu;
				int rastYYonu = this.yYonu;

				this.xYonu = tas.xYonu;
				this.yYonu = tas.yYonu;

				tas.xYonu = rastXYonu;
				tas.yYonu = rastYYonu;

			}
		}


		int uSolXPoz=super.xpoints[0];
		int uSolYpoz=super.ypoints[0];

		if(uSolXPoz < 0 || (uSolXPoz + 25) > genislik) xYonu = -xYonu;
		if(uSolPYoz < 0 || (uSolYPoz + 50) > yukseklik) xYonu = -yYonu;

		for(int i=0; i < super.xpoints.length; i++){

			super.xpoints[i] += xYonu;
			super.ypoints[i] += yYonu;

		}
		
	}//hareket sonu

	//göktaşının x noktalaarı çağrılıyor
	public static int [] getCokgenXArray(int rastXBasPoz){
		int[] rastCokgeXArray = (int[]) hbCokgenXArray.clone();

			for(int i = 0; i < rastCokgeXArray.length; i++ ){

				rastCokgeXArray[i] += rastXBasPoz;

			}

		return rastCokgeXArray;
	}

	//göktaşının y noktalaarı çağrılıyor
	public static int [] getCokgenYArray(int rastYBasPoz){
		int[] rastCokgeYArray = (int[]) hbCokgenYArray.clone();

			for(int i = 0; i < rastCokgeYArray.length; i++ ){

				rastCokgeYArray[i] += rastYBasPoz;

			}

		return rastCokgeYArray;
	}
	

		
	






}
